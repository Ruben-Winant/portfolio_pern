{"version":3,"sources":["MainPage/Navigation/NavBar.tsx","MainPage/About/About.tsx","MainPage/Skills/Skills.tsx","MainPage/Portfolio/Portfolio.tsx","MainPage/Contact/Contact.tsx","MainPage/Footer/Footer.tsx","MainPage/MainPage.tsx","Admin/PortfolioEdit/PersonalInfo/PersonalInfo.tsx","Admin/PortfolioEdit/Portfolio/EditPortfolio.tsx","Admin/PortfolioEdit/Skills/EditSkills.tsx","Admin/Admin.tsx","App.tsx","index.tsx"],"names":["NavBar","MobileMenuClick","menuBtn","document","getElementById","style","display","console","log","className","href","onClick","id","About","useState","firstname","surname","about","extra","dribble","twitter","linkedin","github","role","userinfo","setUserInfo","dataLoaded","setDataLoaded","useEffect","fetch","then","response","json","data","err","error","message","src","alt","Skills","categories","setCategories","skills","setSkills","cats","JSON","parse","stringify","lists","forEach","cat","catListItems","skill","cat_id","colorcode","skill_level_id","skillitem","key","name","icon_name","push","genLists","Portfolio","projects","setProjects","portfolio","project","pid","url","target","img_url","genPortfolio","Contact","Footer","MainPage","PersonalInfo","setUserDataLoaded","setFirstname","lastname","setLastname","setRole","setAbout","setExtra","setId","setTwitter","setGithub","setLinkedin","dribbble","setDribbble","setResMsg","accessToken","localStorage","getItem","myHeaders","Headers","append","toString","method","headers","body","res","val","window","location","reload","handleSubmit","fontSize","type","value","onChange","text","EditPortfolio","newProjectName","setNewProjectName","newProjectImage","setNewProjectImage","newProjectLink","setNewProjectLink","newProjectDesc","setNewProjectDesc","description","handleProjectsUpdateSubmit","event","currentTarget","handleNewProjectTitleChanged","handleNewProjectImageChanged","handleNewProjectLinkChanged","handleNewProjectDescriptionChanged","handleNewProjectSubmit","projectsList","defaultValue","map","Number","parseInt","handleEditProjectNameChanged","handleEditProjectImageChanged","handleEditProjectLinkChanged","handleEditProjectDescriptionChanged","handleProjectDeleteClicked","genProjectsEditList","EditSkills","newCategorie","setNewCategorie","newSkillName","setNewSkillName","newSkillIconName","setNewSkillIconName","newSkillLevel","setNewSkillLevel","newSkillCat","setNewSkillCat","uCat","uSkill","skill_id","listItems","handleDeleteCatClick","handleAddCategorieClick","listCategories","catLists","catSkills","handleDeleteSkillClick","list","listSkills","catOptions","emptySkillFields","handleAddSkillClick","Admin","username","setUsername","password","setPassword","resultmsg","authValid","setAuthValid","token","setItem","handleRefreshButton","onSubmit","preventDefault","required","App","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.e83b4190.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./NavBar.css\";\r\n\r\nexport default function NavBar() {\r\n  const MobileMenuClick = () => {\r\n    let menuBtn = document.getElementById(\"popUpMenu\");\r\n\r\n    menuBtn\r\n      ? menuBtn.style.display === \"none\"\r\n        ? (menuBtn.style.display = \"flex\")\r\n        : (menuBtn.style.display = \"none\")\r\n      : console.log(\"No popup menu button found\");\r\n  };\r\n\r\n  return (\r\n    <header className=\"App-header\">\r\n      <nav className=\"menu\">\r\n        <a href=\"#\" className=\"navMain\">\r\n          Home\r\n        </a>\r\n        <ul className=\"navList\">\r\n          <li>\r\n            <a href=\"#about\" className=\"navItem\">\r\n              About\r\n            </a>\r\n          </li>\r\n          <li className=\"navItem\">|</li>\r\n          <li>\r\n            <a href=\"#skills\" className=\"navItem\">\r\n              Skills\r\n            </a>\r\n          </li>\r\n          <li className=\"navItem\">|</li>\r\n          <li>\r\n            <a href=\"#portfolio\" className=\"navItem\">\r\n              Portfolio\r\n            </a>\r\n          </li>\r\n          <li className=\"navItem\">|</li>\r\n          <li>\r\n            <a href=\"#contact\" className=\"navItem\">\r\n              Contact\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <nav\r\n        onClick={MobileMenuClick}\r\n        className=\"mobileMenuButton\"\r\n        id=\"mobileMenuButton\"\r\n      >\r\n        <div className=\"rectangle\"></div>\r\n        <div className=\"rectangle hiderec\"></div>\r\n        <div className=\"rectangle\"></div>\r\n      </nav>\r\n      <nav onClick={MobileMenuClick} className=\"popUpMenu\" id=\"popUpMenu\">\r\n        <ul className=\"navListPopUp\">\r\n          <li>\r\n            <a href=\"#about\" className=\"navItemPopUp\">\r\n              About\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#skills\" className=\"navItemPopUp\">\r\n              Skills\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#portfolio\" className=\"navItemPopUp\">\r\n              Portfolio\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#contact\" className=\"navItemPopUp\">\r\n              Contact\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./About.css\";\r\nimport UserInfo from \"../../Types/UserInfo\";\r\n\r\nconst About = () => {\r\n  let emptyInfo: UserInfo = {\r\n    firstname: \"\",\r\n    surname: \"\",\r\n    about: \"\",\r\n    extra: \"\",\r\n    dribble: \"\",\r\n    twitter: \"\",\r\n    linkedin: \"\",\r\n    github: \"\",\r\n    role: \"\",\r\n    id: 0,\r\n  };\r\n  const [userinfo, setUserInfo] = useState<UserInfo>(emptyInfo);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  //fetch data\r\n  useEffect(() => {\r\n    try {\r\n      fetch(\"/api/info\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setUserInfo(data[0]);\r\n          setDataLoaded(true);\r\n        });\r\n    } catch (err) {\r\n      console.error(err.message);\r\n      setDataLoaded(false);\r\n    }\r\n  }, []);\r\n\r\n  return dataLoaded ? (\r\n    <section id=\"about\">\r\n      <article className=\"aboutContainer\">\r\n        <div className=\"aboutLeft\">\r\n          <h1>Hi, i'm {userinfo.firstname}</h1>\r\n          <span>{userinfo.role}</span>\r\n          <br />\r\n          <br />\r\n          <p>{userinfo.about}</p>\r\n          <p>{userinfo.extra}</p>\r\n          <a href=\"#contact\">\r\n            <button>Contact</button>\r\n          </a>\r\n        </div>\r\n        <div className=\"aboutRight\">\r\n          <div>\r\n            <img\r\n              src={process.env.PUBLIC_URL + \"/selfie.png\"}\r\n              alt=\"Ruben Winant\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </section>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Skills.css\";\r\nimport skill from \"../../Types/skill\";\r\nimport skill_categories from \"../../Types/skill_categories\";\r\n\r\nconst Skills = () => {\r\n  const [categories, setCategories] = useState<skill_categories[]>([]);\r\n  const [skills, setSkills] = useState<skill[]>([]);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  //fetch categories\r\n  useEffect(() => {\r\n    try {\r\n      fetch(\"/api/skills/categories\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          let cats: skill_categories[] = JSON.parse(JSON.stringify(data));\r\n          setCategories(cats);\r\n          setDataLoaded(true);\r\n        });\r\n    } catch (err) {\r\n      console.error(err.message);\r\n      setDataLoaded(false);\r\n    }\r\n  }, []);\r\n\r\n  //fetch skills\r\n  useEffect(() => {\r\n    try {\r\n      fetch(\"/api/skills\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          let skills: skill[] = JSON.parse(JSON.stringify(data));\r\n          setSkills(skills);\r\n          setDataLoaded(true);\r\n        });\r\n    } catch (err) {\r\n      console.error(err.message);\r\n      setDataLoaded(false);\r\n    }\r\n  }, []);\r\n\r\n  function genLists() {\r\n    let lists: any[] = [];\r\n    if (dataLoaded != null && categories != null && skills != null) {\r\n      categories.forEach((cat) => {\r\n        let catListItems: any[] = [];\r\n\r\n        skills.forEach((skill) => {\r\n          if (skill.cat_id === cat.cat_id) {\r\n            let colorcode = \"\";\r\n            switch (skill.skill_level_id) {\r\n              case 3:\r\n                colorcode = \"good\";\r\n                break;\r\n              case 2:\r\n                colorcode = \"mediocre\";\r\n                break;\r\n              case 1:\r\n                colorcode = \"beginner\";\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n\r\n            let skillitem = (\r\n              <li key={cat.cat_id + cat.name}>\r\n                <p className=\"skillItem\">\r\n                  <i className={colorcode + \" good fa fa-circle\"} />{\" \"}\r\n                  <i className={skill.icon_name} />\r\n                  {\" \" + skill.name}\r\n                </p>\r\n              </li>\r\n            );\r\n\r\n            catListItems.push(skillitem);\r\n          }\r\n        });\r\n\r\n        lists.push(\r\n          <details\r\n            key={cat.cat_id * 59 + \"_\" + cat.cat_id + cat.name}\r\n            className=\"skillsListContainer\"\r\n          >\r\n            <summary className=\"skillListTitle\">{cat.name}</summary>\r\n            <ul className=\"skillsList\">{catListItems}</ul>\r\n          </details>\r\n        );\r\n      });\r\n    }\r\n    return lists;\r\n  }\r\n\r\n  return dataLoaded ? (\r\n    <section id=\"skills\">\r\n      <article className=\"skillsContainer\">\r\n        <h2>Skills</h2>\r\n        <span>\r\n          A list of the elements i enjoy working with and the ones i'm still\r\n          learning.\r\n        </span>\r\n        <br />\r\n        <br />\r\n        <div className=\"skillsContent\">{genLists()}</div>\r\n      </article>\r\n    </section>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Portfolio.css\";\r\nimport Project from \"../../Types/Project\";\r\n\r\nconst Portfolio = () => {\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [projects, setProjects] = useState<Project[]>([]);\r\n\r\n  //fetch data\r\n  useEffect(() => {\r\n    try {\r\n      fetch(\"/api/projects\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setProjects(data);\r\n          setDataLoaded(true);\r\n        });\r\n    } catch (err) {\r\n      console.error(err.message);\r\n      setDataLoaded(false);\r\n    }\r\n  }, []);\r\n\r\n  const genPortfolio = () => {\r\n    let portfolio: any[] = [];\r\n    projects.forEach((project) => {\r\n      portfolio.push(\r\n        <div\r\n          key={\"pr_\" + project.pid + \"_\" + project.name}\r\n          className=\"portfolioCard\"\r\n        >\r\n          <a href={project.url} target=\"_blank\">\r\n            <img src={project.img_url} alt={project.name} />\r\n            <span>{project.name}</span>\r\n          </a>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return <div className=\"portfolioProjects\">{portfolio}</div>;\r\n  };\r\n\r\n  return dataLoaded ? (\r\n    <section id=\"portfolio\">\r\n      <article className=\"portfolioContainer\">\r\n        <div className=\"portfolioTop\">\r\n          <h2>Portfolio</h2>\r\n          <span>Below you'll find some of the projects i worked on.</span>\r\n        </div>\r\n        <br />\r\n        {genPortfolio()}\r\n      </article>\r\n    </section>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n","import React from \"react\";\r\nimport \"./Contact.css\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <section id=\"contact\">\r\n      <article className=\"contactContainer\">\r\n        <div>\r\n          <h2>Contact</h2>\r\n          <span>I'll try to come back to you as quickly as possible.</span>\r\n        </div>\r\n        <div className=\"contactButton\">\r\n          <a href=\"mailto:ruben.winant@hotmail.com?SUBJECT=portfolio\">\r\n            <button>Email</button>\r\n          </a>\r\n        </div>\r\n      </article>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Footer.css\";\r\nimport UserInfo from \"../../Types/UserInfo\";\r\n\r\nconst Footer = () => {\r\n  let emptyInfo: UserInfo = {\r\n    firstname: \"\",\r\n    surname: \"\",\r\n    about: \"\",\r\n    extra: \"\",\r\n    dribble: \"\",\r\n    twitter: \"\",\r\n    linkedin: \"\",\r\n    github: \"\",\r\n    role: \"\",\r\n    id: 0,\r\n  };\r\n  const [userinfo, setUserInfo] = useState<UserInfo>(emptyInfo);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  //fetch data\r\n  useEffect(() => {\r\n    try {\r\n      fetch(\"/api/info\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setUserInfo(data[0]);\r\n          setDataLoaded(true);\r\n        });\r\n    } catch (err) {\r\n      console.error(err.message);\r\n      setDataLoaded(false);\r\n    }\r\n  }, []);\r\n\r\n  return dataLoaded ? (\r\n    <footer id=\"footer\">\r\n      <h1>Get in touch</h1>\r\n      <br />\r\n      <div className=\"footerContent\">\r\n        <a href={userinfo.dribble}>\r\n          <div className=\"mediaCell\">\r\n            <i className=\"dribbble fa fa-dribbble fa-3x\" />\r\n            <span className=\"mediaName\">Dribbble</span>\r\n          </div>\r\n        </a>\r\n\r\n        <a href={userinfo.linkedin}>\r\n          <div className=\"mediaCell\">\r\n            <i className=\"linkedin fa fa-linkedin fa-3x\" />\r\n            <span className=\"mediaName\">LinkedIn</span>\r\n          </div>\r\n        </a>\r\n\r\n        <a href={userinfo.twitter}>\r\n          <div className=\"mediaCell\">\r\n            <i className=\"twitter fa fa-twitter fa-3x\" />\r\n            <span className=\"mediaName\">Twitter</span>\r\n          </div>\r\n        </a>\r\n        <a href={userinfo.github}>\r\n          <div className=\"mediaCell\">\r\n            <i className=\"github fa fa-github fa-3x\" />\r\n            <span className=\"mediaName\">Github</span>\r\n          </div>\r\n        </a>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <span>Copyright © 2020 Ruben Winant. All rights reserved.</span>\r\n    </footer>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./MainPage.css\";\r\nimport NavBar from \"../MainPage/Navigation/NavBar\";\r\nimport About from \"../MainPage/About/About\";\r\nimport Skills from \"../MainPage/Skills/Skills\";\r\nimport Portfolio from \"../MainPage/Portfolio/Portfolio\";\r\nimport Contact from \"../MainPage/Contact/Contact\";\r\nimport Footer from \"../MainPage/Footer/Footer\";\r\n\r\nfunction MainPage() {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <About />\r\n      <Skills />\r\n      <Portfolio />\r\n      <Contact />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport \"./PersonalInfo.css\";\r\n\r\nconst PersonalInfo = () => {\r\n  //basic user info\r\n  const [userDataLoaded, setUserDataLoaded] = useState<boolean>(false);\r\n  const [firstname, setFirstname] = useState<string>(\"\");\r\n  const [lastname, setLastname] = useState<string>(\"\");\r\n  const [role, setRole] = useState<string>(\"\");\r\n  const [about, setAbout] = useState<string>(\"\");\r\n  const [extra, setExtra] = useState<string>(\"\");\r\n  const [id, setId] = useState(0);\r\n\r\n  //links\r\n  const [twitter, setTwitter] = useState<string>(\"\");\r\n  const [github, setGithub] = useState<string>(\"\");\r\n  const [linkedin, setLinkedin] = useState<string>(\"\");\r\n  const [dribbble, setDribbble] = useState<string>(\"\");\r\n  const [resMsg, setResMsg] = useState<string>(\"\");\r\n\r\n  //fetch personal data\r\n  useEffect(() => {\r\n    try {\r\n      fetch(\"/api/info\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          //personal info\r\n          setFirstname(data[0].firstname);\r\n          setLastname(data[0].surname);\r\n          setRole(data[0].role);\r\n          setAbout(data[0].about);\r\n          setExtra(data[0].extra);\r\n          setId(data[0].id);\r\n\r\n          //set links data\r\n          setDribbble(data[0].dribble);\r\n          setGithub(data[0].github);\r\n          setLinkedin(data[0].linkedin);\r\n          setTwitter(data[0].twitter);\r\n          setUserDataLoaded(true);\r\n        });\r\n    } catch (err) {\r\n      console.error(err.message);\r\n      setUserDataLoaded(false);\r\n    }\r\n  }, []);\r\n\r\n  //input change handlers basic info\r\n  const handleFirstnameChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setFirstname(event.target.value);\r\n  };\r\n  const handleLastnameChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setLastname(event.target.value);\r\n  };\r\n  const handleRoleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setRole(event.target.value);\r\n  };\r\n  const handleAboutChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n    setAbout(event.target.value);\r\n  };\r\n  const handleExtraChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n    setExtra(event.target.value);\r\n  };\r\n\r\n  //input handlers links\r\n  const handleGithubChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setGithub(event.target.value);\r\n  };\r\n  const handleTwitterChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setTwitter(event.target.value);\r\n  };\r\n  const handleLinkedinChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setLinkedin(event.target.value);\r\n  };\r\n  const handleDribbbleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setDribbble(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    try {\r\n      let accessToken = localStorage.getItem(\"accesToken\");\r\n      let myHeaders: Headers = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n      if (accessToken) {\r\n        myHeaders.append(\"authorization\", \"Bearer \" + accessToken.toString());\r\n      }\r\n\r\n      //update personal stuff\r\n      fetch(\"/admin/info/\" + id, {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: JSON.stringify({\r\n          firstname: firstname,\r\n          surname: lastname,\r\n          role: role,\r\n          about: about,\r\n          extra: extra,\r\n          twitter: twitter,\r\n          github: github,\r\n          linkedin: linkedin,\r\n          dribble: dribbble,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((val) =>\r\n          val.message\r\n            ? (setResMsg(val.message), window.location.reload())\r\n            : null\r\n        );\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <article>\r\n      <form>\r\n        <div className=\"pi-input\" onClick={() => handleSubmit()}>\r\n          <h2>Personal info</h2>\r\n          <span>\r\n            Update <i style={{ fontSize: 15 }} className=\"fa fa-refresh\" />\r\n          </span>\r\n        </div>\r\n        <div className=\"pi-outer\">\r\n          <div className=\"pi-inner\">\r\n            <div className=\"pi-input\">\r\n              <label>First name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"firstname\"\r\n                value={firstname}\r\n                onChange={(text) => handleFirstnameChange(text)}\r\n              />\r\n            </div>\r\n            <div className=\"pi-input\">\r\n              <label>Last name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"lastname\"\r\n                value={lastname}\r\n                onChange={(text) => handleLastnameChange(text)}\r\n              />\r\n            </div>\r\n            <div className=\"pi-input\">\r\n              <label>Role</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"role\"\r\n                value={role}\r\n                onChange={(text) => handleRoleChange(text)}\r\n              />\r\n            </div>\r\n            <div className=\"pi-input\">\r\n              <label>About</label>\r\n              <textarea\r\n                name=\"about\"\r\n                value={about}\r\n                onChange={(text) => handleAboutChange(text)}\r\n              />\r\n            </div>\r\n            <div className=\"pi-input\">\r\n              <label>Extra</label>\r\n              <textarea\r\n                name=\"extra\"\r\n                value={extra}\r\n                onChange={(text) => handleExtraChange(text)}\r\n              />\r\n            </div>\r\n            <div className=\"pi-input\">\r\n              <label>Github</label>\r\n              <input\r\n                type=\"url\"\r\n                name=\"github\"\r\n                value={github}\r\n                onChange={(text) => handleGithubChange(text)}\r\n              />\r\n            </div>\r\n            <div className=\"pi-input\">\r\n              <label>Twitter</label>\r\n              <input\r\n                type=\"url\"\r\n                name=\"twitter\"\r\n                value={twitter}\r\n                onChange={(text) => handleTwitterChange(text)}\r\n              />\r\n            </div>\r\n            <div className=\"pi-input\">\r\n              <label>LinkedIn</label>\r\n              <input\r\n                type=\"url\"\r\n                name=\"linkedin\"\r\n                value={linkedin}\r\n                onChange={(text) => handleLinkedinChange(text)}\r\n              />\r\n            </div>\r\n            <div className=\"pi-input\">\r\n              <label>Dribbble</label>\r\n              <input\r\n                type=\"url\"\r\n                name=\"dribbble\"\r\n                value={dribbble}\r\n                onChange={(text) => handleDribbbleChange(text)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default PersonalInfo;\r\n","import React, {\r\n  ChangeEvent,\r\n  FormEvent,\r\n  ReactNode,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport \"./EditPortfolio.css\";\r\nimport Project from \"../../../Types/Project\";\r\n\r\nconst EditPortfolio = () => {\r\n  const [projects, setProjects] = useState<Project[]>([]);\r\n  const [newProjectName, setNewProjectName] = useState<string>(\"\");\r\n  const [newProjectImage, setNewProjectImage] = useState<string>(\"\");\r\n  const [newProjectLink, setNewProjectLink] = useState<string>(\"\");\r\n  const [newProjectDesc, setNewProjectDesc] = useState<string>(\"\");\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n  const [resMsg, setResMsg] = useState<string>(\"\");\r\n\r\n  //fetch data\r\n  useEffect(() => {\r\n    try {\r\n      fetch(\"/api/projects\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setProjects(data);\r\n          setDataLoaded(true);\r\n        });\r\n    } catch (err) {\r\n      console.error(err.message);\r\n      setDataLoaded(false);\r\n    }\r\n  }, []);\r\n\r\n  //new project handlers\r\n  const handleNewProjectTitleChanged = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setNewProjectName(event.currentTarget.value);\r\n  };\r\n  const handleNewProjectImageChanged = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setNewProjectImage(event.currentTarget.value);\r\n  };\r\n  const handleNewProjectLinkChanged = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setNewProjectLink(event.currentTarget.value);\r\n  };\r\n  const handleNewProjectDescriptionChanged = (\r\n    event: ChangeEvent<HTMLTextAreaElement>\r\n  ) => {\r\n    setNewProjectDesc(event.currentTarget.value);\r\n  };\r\n  const handleNewProjectSubmit = (event: FormEvent) => {\r\n    try {\r\n      let accessToken = localStorage.getItem(\"accesToken\");\r\n      let myHeaders: Headers = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n      if (accessToken) {\r\n        myHeaders.append(\"authorization\", \"Bearer \" + accessToken.toString());\r\n      }\r\n\r\n      //update personal stuff\r\n      fetch(\"/api/projects/add\", {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: JSON.stringify({\r\n          name: newProjectName,\r\n          img_url: newProjectImage,\r\n          url: newProjectLink,\r\n          description: newProjectDesc,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((val) =>\r\n          val.message\r\n            ? (setResMsg(val.message), window.location.reload())\r\n            : null\r\n        );\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  //edit project handlers\r\n  const handleEditProjectNameChanged = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    projects.map((project) =>\r\n      project.pid === Number.parseInt(event.currentTarget.name)\r\n        ? (project.name = event.currentTarget.value)\r\n        : null\r\n    );\r\n  };\r\n  const handleEditProjectImageChanged = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    projects.map((project) =>\r\n      project.pid === Number.parseInt(event.currentTarget.name)\r\n        ? (project.img_url = event.currentTarget.value)\r\n        : null\r\n    );\r\n  };\r\n  const handleEditProjectLinkChanged = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    projects.map((project) =>\r\n      project.pid === Number.parseInt(event.currentTarget.name)\r\n        ? (project.url = event.currentTarget.value)\r\n        : null\r\n    );\r\n  };\r\n  const handleEditProjectDescriptionChanged = (\r\n    event: ChangeEvent<HTMLTextAreaElement>\r\n  ) => {\r\n    projects.map((project) =>\r\n      project.pid === Number.parseInt(event.currentTarget.name)\r\n        ? (project.description = event.currentTarget.value)\r\n        : null\r\n    );\r\n  };\r\n  const handleProjectDeleteClicked = (id: number) => {\r\n    try {\r\n      let accessToken = localStorage.getItem(\"accesToken\");\r\n      let myHeaders: Headers = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n      if (accessToken) {\r\n        myHeaders.append(\"authorization\", \"Bearer \" + accessToken.toString());\r\n      }\r\n\r\n      //update personal stuff\r\n      fetch(\"/api/projects/delete\", {\r\n        method: \"DELETE\",\r\n        headers: myHeaders,\r\n        body: JSON.stringify({\r\n          pid: id,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((val) =>\r\n          val.message\r\n            ? (setResMsg(val.message), window.location.reload())\r\n            : null\r\n        );\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  const handleProjectsUpdateSubmit = () => {\r\n    try {\r\n      let accessToken = localStorage.getItem(\"accesToken\");\r\n      let myHeaders: Headers = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n      if (accessToken) {\r\n        myHeaders.append(\"authorization\", \"Bearer \" + accessToken.toString());\r\n      }\r\n\r\n      //update projects\r\n      projects.forEach((project) =>\r\n        fetch(\"/api/projects/update\", {\r\n          method: \"PUT\",\r\n          headers: myHeaders,\r\n          body: JSON.stringify({\r\n            pid: project.pid,\r\n            name: project.name,\r\n            img_url: project.img_url,\r\n            url: project.url,\r\n            description: project.description,\r\n          }),\r\n        })\r\n          .then((res) => res.json())\r\n          .then((val) =>\r\n            val.message\r\n              ? (setResMsg(val.message), window.location.reload())\r\n              : null\r\n          )\r\n      );\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  //generate project cards\r\n  const genProjectsEditList = () => {\r\n    let projectsList: ReactNode[] = [];\r\n    projects.forEach((project) =>\r\n      projectsList.push(\r\n        <div key={project.pid} className=\"projectList-outer\">\r\n          <div className=\"projectList-inner\">\r\n            <div className=\"projectList\">\r\n              <label>title</label>\r\n              <input\r\n                type=\"text\"\r\n                name={project.pid.toString()}\r\n                defaultValue={project.name}\r\n                onChange={(event) => handleEditProjectNameChanged(event)}\r\n              />\r\n            </div>\r\n            <div className=\"projectList\">\r\n              <label>image url</label>\r\n              <input\r\n                type=\"text\"\r\n                name={project.pid.toString()}\r\n                defaultValue={project.img_url}\r\n                onChange={(event) => handleEditProjectImageChanged(event)}\r\n              />\r\n            </div>\r\n            <div className=\"projectList\">\r\n              <label>project link</label>\r\n              <input\r\n                type=\"text\"\r\n                name={project.pid.toString()}\r\n                defaultValue={project.url}\r\n                onChange={(event) => handleEditProjectLinkChanged(event)}\r\n              />\r\n            </div>\r\n            <div className=\"projectList\">\r\n              <label>description</label>\r\n              <textarea\r\n                name={project.pid.toString()}\r\n                defaultValue={project.description}\r\n                onChange={(event) => handleEditProjectDescriptionChanged(event)}\r\n              ></textarea>\r\n              <div\r\n                className=\"remove\"\r\n                onClick={() => handleProjectDeleteClicked(project.pid)}\r\n              >\r\n                <span>\r\n                  Remove <i className=\"fa fa-trash\" />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n    return projectsList;\r\n  };\r\n\r\n  return (\r\n    <article>\r\n      <form>\r\n        <div\r\n          className=\"projectList\"\r\n          onClick={() => handleProjectsUpdateSubmit()}\r\n        >\r\n          <h2>Projects</h2>\r\n          <span>\r\n            Update <i style={{ fontSize: 15 }} className=\"fa fa-refresh\" />\r\n          </span>\r\n        </div>\r\n        <div className=\"projectList-outer\">\r\n          <div className=\"projectList-inner\">\r\n            <div className=\"projectList\">\r\n              <label>title</label>\r\n              <input\r\n                onChange={(event) => handleNewProjectTitleChanged(event)}\r\n                value={newProjectName}\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n            <div className=\"projectList\">\r\n              <label>image url</label>\r\n              <input\r\n                onChange={(event) => handleNewProjectImageChanged(event)}\r\n                value={newProjectImage}\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n            <div className=\"projectList\">\r\n              <label>project link</label>\r\n              <input\r\n                onChange={(event) => handleNewProjectLinkChanged(event)}\r\n                value={newProjectLink}\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n            <div className=\"projectList\">\r\n              <label>description</label>\r\n              <textarea\r\n                onChange={(event) => handleNewProjectDescriptionChanged(event)}\r\n                value={newProjectDesc}\r\n              ></textarea>\r\n              <div\r\n                className=\"remove\"\r\n                onClick={(event) => handleNewProjectSubmit(event)}\r\n              >\r\n                <span>\r\n                  Add <i className=\"fa fa-plus\" />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {genProjectsEditList()}\r\n      </form>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default EditPortfolio;\r\n","import React, {\r\n  ChangeEvent,\r\n  FormEvent,\r\n  ReactNode,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport skill_categories from \"../../../Types/skill_categories\";\r\nimport skill from \"../../../Types/skill\";\r\nimport \"./EditSkills.css\";\r\n\r\nconst EditSkills = () => {\r\n  const [categories, setCategories] = useState<skill_categories[]>([]);\r\n  const [skills, setSkills] = useState<skill[]>([]);\r\n  const [newCategorie, setNewCategorie] = useState<string>(\"\");\r\n  const [newSkillName, setNewSkillName] = useState<string>(\"\");\r\n  const [newSkillIconName, setNewSkillIconName] = useState<string>(\"\");\r\n  const [newSkillLevel, setNewSkillLevel] = useState<number>(1);\r\n  const [newSkillCat, setNewSkillCat] = useState<number>(0);\r\n  const [resMsg, setResMsg] = useState<string>(\"\");\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  //fetch categories\r\n  useEffect(() => {\r\n    try {\r\n      //fetch categories\r\n      fetch(\"/api/skills/categories\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          let cats: skill_categories[] = JSON.parse(JSON.stringify(data));\r\n          setCategories(cats);\r\n          setNewSkillCat(cats[0].cat_id);\r\n          setDataLoaded(true);\r\n        });\r\n\r\n      //fetch skills\r\n      fetch(\"/api/skills\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          let skills: skill[] = JSON.parse(JSON.stringify(data));\r\n          setSkills(skills);\r\n          setDataLoaded(true);\r\n        });\r\n    } catch (err) {\r\n      console.error(err.message);\r\n      setDataLoaded(false);\r\n    }\r\n  }, []);\r\n\r\n  //cat crud\r\n  const handleCatNameChanged = (event: ChangeEvent<HTMLInputElement>) => {\r\n    categories.map((cats) =>\r\n      cats.cat_id.toString() === event.currentTarget.name\r\n        ? (cats.name = event.currentTarget.value)\r\n        : null\r\n    );\r\n    console.log(categories);\r\n  };\r\n  const handleAddCategorieChanged = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setNewCategorie(event.currentTarget.value);\r\n  };\r\n\r\n  const handleAddCategorieClick = () => {\r\n    try {\r\n      let accessToken = localStorage.getItem(\"accesToken\");\r\n      let myHeaders: Headers = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n      if (accessToken) {\r\n        myHeaders.append(\"authorization\", \"Bearer \" + accessToken.toString());\r\n      }\r\n\r\n      //update personal stuff\r\n      fetch(\"/api/skills/categories/add\", {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: JSON.stringify({\r\n          newCategorie: newCategorie,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((val) =>\r\n          val.message\r\n            ? (setResMsg(val.message), window.location.reload())\r\n            : null\r\n        );\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  const handleDeleteCatClick = (cat_id: number) => {\r\n    try {\r\n      let accessToken = localStorage.getItem(\"accesToken\");\r\n      let myHeaders: Headers = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n      if (accessToken) {\r\n        myHeaders.append(\"authorization\", \"Bearer \" + accessToken.toString());\r\n      }\r\n\r\n      //update personal stuff\r\n      fetch(\"/api/skills/categories/delete\", {\r\n        method: \"DELETE\",\r\n        headers: myHeaders,\r\n        body: JSON.stringify({\r\n          cat_id: cat_id,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((val) =>\r\n          val.message\r\n            ? (setResMsg(val.message), window.location.reload())\r\n            : null\r\n        );\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  //new skill crud\r\n  const handleAddSkillNameChanged = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setNewSkillName(event.currentTarget.value);\r\n  };\r\n  const handleAddSkillIconNameChanged = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setNewSkillIconName(event.currentTarget.value);\r\n  };\r\n  const handleAddSkillLevelChanged = (\r\n    event: ChangeEvent<HTMLSelectElement>\r\n  ) => {\r\n    setNewSkillLevel(Number.parseInt(event.currentTarget.value));\r\n  };\r\n  const handleAddSkillCatChanged = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    setNewSkillCat(Number.parseInt(event.currentTarget.value));\r\n  };\r\n  const handleAddSkillClick = (event: FormEvent) => {\r\n    try {\r\n      let accessToken = localStorage.getItem(\"accesToken\");\r\n      let myHeaders: Headers = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n      if (accessToken) {\r\n        myHeaders.append(\"authorization\", \"Bearer \" + accessToken.toString());\r\n      }\r\n\r\n      //update personal stuff\r\n      fetch(\"/api/skills/add\", {\r\n        method: \"POST\",\r\n        headers: myHeaders,\r\n        body: JSON.stringify({\r\n          cat_id: newSkillCat,\r\n          name: newSkillName,\r\n          icon_name: newSkillIconName,\r\n          skill_level_id: newSkillLevel,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((val) =>\r\n          val.message\r\n            ? (setResMsg(val.message), window.location.reload())\r\n            : null\r\n        );\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  //crud skills\r\n  const handleSkillNameChanged = (event: ChangeEvent<HTMLInputElement>) => {\r\n    skills.map((skill) =>\r\n      skill.cat_id.toString() === event.currentTarget.name\r\n        ? (skill.name = event.currentTarget.value)\r\n        : null\r\n    );\r\n  };\r\n  const handleSkillIconNameChanged = (event: ChangeEvent<HTMLInputElement>) => {\r\n    skills.map((skill) =>\r\n      skill.cat_id.toString() === event.currentTarget.name\r\n        ? (skill.icon_name = event.currentTarget.value)\r\n        : null\r\n    );\r\n  };\r\n  const handleSkillLevelChanged = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    skills.forEach((skill) =>\r\n      skill.cat_id.toString() === event.currentTarget.name\r\n        ? (skill.skill_level_id = Number.parseInt(event.currentTarget.value))\r\n        : null\r\n    );\r\n  };\r\n  const handleDeleteSkillClick = (skill_id: number) => {\r\n    try {\r\n      let accessToken = localStorage.getItem(\"accesToken\");\r\n      let myHeaders: Headers = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n      if (accessToken) {\r\n        myHeaders.append(\"authorization\", \"Bearer \" + accessToken.toString());\r\n      }\r\n\r\n      //update personal stuff\r\n      fetch(\"/api/skills/delete\", {\r\n        method: \"DELETE\",\r\n        headers: myHeaders,\r\n        body: JSON.stringify({\r\n          skill_id: skill_id,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((val) =>\r\n          val.message\r\n            ? (setResMsg(val.message), window.location.reload())\r\n            : null\r\n        );\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  //generate the lists\r\n  const listCategories = () => {\r\n    let listItems: any[] = [];\r\n    //add inputs for each categories\r\n    categories.forEach((cat) => {\r\n      listItems.push(\r\n        <li className=\"skill-cat-li\" key={cat.cat_id}>\r\n          <input\r\n            onChange={(val) => {\r\n              handleCatNameChanged(val);\r\n            }}\r\n            type=\"text\"\r\n            defaultValue={cat.name}\r\n            name={cat.cat_id.toString()}\r\n          />\r\n          <i\r\n            onClick={() => handleDeleteCatClick(cat.cat_id)}\r\n            className=\"fa fa-trash\"\r\n          />\r\n        </li>\r\n      );\r\n    });\r\n    //add an input for adding new ones\r\n    listItems.push(\r\n      <li key={\"newCat\"} className=\"skill-cat-li\">\r\n        <input\r\n          name=\"new field\"\r\n          value={newCategorie}\r\n          onChange={(val) => handleAddCategorieChanged(val)}\r\n          type=\"text\"\r\n        />\r\n        <i onClick={() => handleAddCategorieClick()} className=\"fa fa-plus\" />\r\n      </li>\r\n    );\r\n    return listItems;\r\n  };\r\n  const listSkills = () => {\r\n    let catLists: any[] = [];\r\n\r\n    categories.forEach((cat) => {\r\n      let catSkills: any[] = [];\r\n      skills.forEach((skill) =>\r\n        cat.cat_id === skill.cat_id\r\n          ? catSkills.push(\r\n              <li key={skill.skill_id}>\r\n                <input\r\n                  name={skill.cat_id.toString()}\r\n                  type=\"text\"\r\n                  onChange={(val) => handleSkillNameChanged(val)}\r\n                  defaultValue={skill.name}\r\n                />\r\n                <input\r\n                  name={skill.cat_id.toString()}\r\n                  type=\"text\"\r\n                  defaultValue={skill.icon_name}\r\n                  onChange={(val) => handleSkillIconNameChanged(val)}\r\n                />\r\n                <select\r\n                  onChange={(val) => handleSkillLevelChanged(val)}\r\n                  name={skill.cat_id.toString()}\r\n                  defaultValue={skill.skill_level_id}\r\n                >\r\n                  <option value={1}>1</option>\r\n                  <option value={2}>2</option>\r\n                  <option value={3}>3</option>\r\n                </select>\r\n                <i\r\n                  onClick={() => handleDeleteSkillClick(skill.skill_id)}\r\n                  className=\"fa fa-trash\"\r\n                />\r\n              </li>\r\n            )\r\n          : null\r\n      );\r\n\r\n      let list = (\r\n        <div key={\"list_\" + cat.cat_id} className=\"skill-cat-input\">\r\n          <label>{cat.name}</label>\r\n          <ul className=\"catSkillList\">{catSkills}</ul>\r\n        </div>\r\n      );\r\n\r\n      catLists.push(list);\r\n    });\r\n\r\n    return catLists;\r\n  };\r\n  const emptySkillFields = () => {\r\n    let catOptions: ReactNode[] = [];\r\n    categories.forEach((cat) =>\r\n      catOptions.push(\r\n        <option key={cat.cat_id} value={cat.cat_id}>\r\n          {cat.name}\r\n        </option>\r\n      )\r\n    );\r\n    return (\r\n      <div className=\"empty-skill-container\">\r\n        <div className=\"empty-skill-input\">\r\n          <label>name</label>\r\n          <input\r\n            value={newSkillName}\r\n            onChange={(val) => handleAddSkillNameChanged(val)}\r\n            type=\"text\"\r\n          />\r\n        </div>\r\n        <div className=\"empty-skill-input\">\r\n          <label>icon</label>\r\n          <input\r\n            value={newSkillIconName}\r\n            onChange={(val) => handleAddSkillIconNameChanged(val)}\r\n            type=\"text\"\r\n          />\r\n        </div>\r\n        <div className=\"empty-skill-input\">\r\n          <label>skill level</label>\r\n          <select\r\n            value={newSkillLevel}\r\n            onChange={(val) => handleAddSkillLevelChanged(val)}\r\n          >\r\n            <option value={1}>1</option>\r\n            <option value={2}>2</option>\r\n            <option value={3}>3</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"empty-skill-input\">\r\n          <label>categorie</label>\r\n          <select\r\n            value={newSkillCat}\r\n            onChange={(val) => handleAddSkillCatChanged(val)}\r\n          >\r\n            {catOptions}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //form handler\r\n  const handleSubmit = () => {\r\n    try {\r\n      let accessToken = localStorage.getItem(\"accesToken\");\r\n      let myHeaders: Headers = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n      if (accessToken) {\r\n        myHeaders.append(\"authorization\", \"Bearer \" + accessToken.toString());\r\n      }\r\n\r\n      //update categories\r\n      categories.forEach((uCat) =>\r\n        fetch(\"/api/skills/categories/update\", {\r\n          method: \"PUT\",\r\n          headers: myHeaders,\r\n          body: JSON.stringify({\r\n            cat_id: uCat.cat_id,\r\n            name: uCat.name,\r\n          }),\r\n        })\r\n          .then((res) => res.json())\r\n          .then((val) => (val.message ? setResMsg(val.message) : null))\r\n      );\r\n\r\n      //update skills\r\n      skills.forEach((uSkill) =>\r\n        fetch(\"/api/skills/update\", {\r\n          method: \"PUT\",\r\n          headers: myHeaders,\r\n          body: JSON.stringify({\r\n            cat_id: uSkill.cat_id,\r\n            name: uSkill.name,\r\n            skill_level_id: uSkill.skill_level_id,\r\n            icon_name: uSkill.icon_name,\r\n            skill_id: uSkill.skill_id,\r\n          }),\r\n        })\r\n          .then((res) => res.json())\r\n          .then((val) => (val.message ? setResMsg(val.message) : null))\r\n      );\r\n\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <article>\r\n      <form>\r\n        <div className=\"skill-cat-input\" onClick={() => handleSubmit()}>\r\n          <h2>Skills</h2>\r\n          <span>\r\n            Update <i style={{ fontSize: 15 }} className=\"fa fa-refresh\" />\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"skill-outer\">\r\n          <div className=\"skill-inner\">\r\n            <div className=\"skill-cat-input\">\r\n              <label>Categories</label>\r\n              <ul>{listCategories()}</ul>\r\n            </div>\r\n            <div>{listSkills()}</div>\r\n            <hr />\r\n            <div className=\"skill-cat-input\">\r\n              <label>Add new skill</label>\r\n              {emptySkillFields()}\r\n              <div\r\n                className=\"remove\"\r\n                onClick={(event) => handleAddSkillClick(event)}\r\n              >\r\n                <span>\r\n                  Add <i className=\"fa fa-plus\" />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default EditSkills;\r\n","import React, { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\nimport \"./Admin.css\";\r\nimport PersonalInfo from \"./PortfolioEdit/PersonalInfo/PersonalInfo\";\r\nimport EditPortfolio from \"./PortfolioEdit/Portfolio/EditPortfolio\";\r\nimport EditSkills from \"./PortfolioEdit/Skills/EditSkills\";\r\n\r\nconst Admin = () => {\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [resultmsg, setResMsg] = useState<string>(\"\");\r\n  const [authValid, setAuthValid] = useState<boolean>(false);\r\n\r\n  const handleUsernameChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event: FormEvent) => {\r\n    try {\r\n      fetch(\"/admin/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username: username,\r\n          password: password,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((val) =>\r\n          val.message\r\n            ? (setResMsg(val.message), setAuthValid(false))\r\n            : (localStorage.setItem(\"accesToken\", val.token),\r\n              setAuthValid(true))\r\n        );\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleRefreshButton = () => {\r\n    try {\r\n      fetch(\"/admin/refresh\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username: username,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((val) =>\r\n          val.message\r\n            ? (setResMsg(val.message), setAuthValid(false))\r\n            : (localStorage.setItem(\"accesToken\", val.token),\r\n              setAuthValid(true))\r\n        );\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"accesToken\");\r\n    token && token !== \"\" ? setAuthValid(true) : setAuthValid(false);\r\n  }, []);\r\n\r\n  return !authValid ? (\r\n    <section>\r\n      <article>\r\n        <div className=\"outer-login\">\r\n          <div className=\"inner-login\">\r\n            <h1>Admin login</h1>\r\n            <form\r\n              className=\"form-login\"\r\n              onSubmit={(event) => handleSubmit(event)}\r\n            >\r\n              <div className=\"input-login\">\r\n                <label>Username </label>\r\n                <input\r\n                  required={true}\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  value={username}\r\n                  onChange={(text) => handleUsernameChange(text)}\r\n                />\r\n              </div>\r\n              <div className=\"input-login\">\r\n                <label>Password </label>\r\n                <input\r\n                  required={true}\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={(text) => handlePasswordChange(text)}\r\n                />\r\n              </div>\r\n              <button type=\"submit\">log in</button>\r\n            </form>\r\n          </div>\r\n\r\n          {resultmsg ? (\r\n            <div className=\"error\">\r\n              <p>{resultmsg}</p>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </article>\r\n    </section>\r\n  ) : (\r\n    <section>\r\n      <article>\r\n        <h1>Edit portfolio content</h1>\r\n      </article>\r\n      <PersonalInfo />\r\n      <br />\r\n      <br />\r\n      <EditSkills />\r\n      <br />\r\n      <br />\r\n      <EditPortfolio />\r\n      <article>\r\n        <button onClick={() => handleRefreshButton()}>refresh token</button>\r\n      </article>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport MainPage from \"./MainPage/MainPage\";\nimport Admin from \"./Admin/Admin\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/admin\">\n          <Admin />\n        </Route>\n        <Route path=\"/\">\n          <MainPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}